<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csst.hotelCrawler.dao.HotelCommentDao" >
  <resultMap id="BaseResultMap" type="com.csst.hotelCrawler.entity.HotelComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 13 09:10:00 CST 2015.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="hotelId" property="hotelid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="trip" property="trip" jdbcType="VARCHAR" />
    <result column="checkInDate" property="checkindate" jdbcType="TIMESTAMP" />
    <result column="roomtype" property="roomtype" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="REAL" />
    <result column="scoreAll" property="scoreall" jdbcType="VARCHAR" />
    <result column="commentDate" property="commentdate" jdbcType="TIMESTAMP" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
  </resultMap>
 
  <insert id="insert" parameterType="com.csst.hotelCrawler.entity.HotelComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 13 09:10:00 CST 2015.
    -->
    insert into hotelComment (id, hotelId, name, 
      trip, checkInDate, roomtype, 
      score, scoreAll, commentDate, 
      comment)
    values (#{id,jdbcType=INTEGER}, #{hotelid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{trip,jdbcType=VARCHAR}, #{checkindate,jdbcType=TIMESTAMP}, #{roomtype,jdbcType=VARCHAR}, 
      #{score,jdbcType=REAL}, #{scoreall,jdbcType=VARCHAR}, #{commentdate,jdbcType=TIMESTAMP}, 
      #{comment,jdbcType=VARCHAR})
  </insert>
  
  <select id="queryExistHotelId" resultType="java.lang.String">
  SELECT DISTINCT hotelInfo.webHotelId FROM
	hotelComment,
	hotelInfo
WHERE	
hotelComment.hotelId = hotelInfo.id
  </select>
  
  <select id="queryAll" resultMap="BaseResultMap">
  	select * from hotelComment where feel is null
  </select>
  
  <update id="update" parameterType="HotelComment">  
        update hotelComment 
        <set>
	        <if test="feel != null">
	       	 	feel = #{feel},
	    	</if>
    	</set>
        where id=#{id}  
    </update>

</mapper>